# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"

# window numbering
# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# Mouse Mode
#set-option -g mouse on

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf


# set terminal title
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# set window title to be last 3 segments of path (change to -f-3 vs -f-1)
#   highlight active window
#   variation of: https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory
set-window-option -g window-status-current-format '#[fg=red,bg=colour166,bold] #{window_index} #[fg=green]#{pane_current_command} #[fg=cyan]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) #[fg=white]|'
set-window-option -g window-status-format '#[fg=white,bold]#{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) #[fg=white]|'


###############################################################################
# Solarized (cut and pasted)
#   https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-style fg=colour136,bg=colour235 #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# message text
set-option -g message-style fg=colour166,bg=colour235 #orange and base02

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# SSH agent forwarding
#
# Upon attach, reload env vars to pick up SSH_AUTH_SOCK for ssh-agent
# Tmux 3.0a has pre-populated SSH_AUTH_SOCK into update-environment
#   tmux show-option -g update-environment
# This prevents the ability to explicitly set SSH_AUTH_SOCK
#   Remove SSH_AUTH_SOCK from update-environment
#   set-option -g -u update-environment SSH_AUTH_SOCK # doesn't seem to work
# > set-option -g -u update-environment[3]
#   Set SSH_AUTH_SOCK to something known
# > setenv -g SSH_AUTH_SOCK /tmp/ssh_auth_sock_tmux
# Force set the link to the newest ssh socket found in tmp dir
# > run-shell "ln -sf $(find /tmp/ssh-* -type s -printf '%T+\t %p\n' | sort -r | head -n 1 | cut -f2) /tmp/ssh_auth_sock_tmux"
#
# Do all of the above only if there is an SSH_AUTH_SOCK originally defined
if-shell -b '[ -n $SSH_AUTH_SOCK ]' " \
  set-option -g -u update-environment[3]; \
  setenv -g SSH_AUTH_SOCK /tmp/ssh_auth_sock_tmux; \
  run-shell \"ln -sf $(find /tmp/ssh-* -type s | head -n 1) /tmp/ssh_auth_sock_tmux && echo $(date) > /tmp/tmp.txt\" \
"
